<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker 相关</title>
      <link href="/posts/3.html"/>
      <url>/posts/3.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-docker-安装"><a class="markdownIt-Anchor" href="#一-docker-安装"></a> 一、Docker 安装</h1><h2 id="1-ubuntu-debian"><a class="markdownIt-Anchor" href="#1-ubuntu-debian"></a> 1. Ubuntu &amp; Debian</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure><h2 id="2-centos"><a class="markdownIt-Anchor" href="#2-centos"></a> 2. CentOS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><h1 id="二-设置网络代理"><a class="markdownIt-Anchor" href="#二-设置网络代理"></a> 二、设置网络代理</h1><h2 id="1-docker-pull-代理"><a class="markdownIt-Anchor" href="#1-docker-pull-代理"></a> 1. Docker Pull 代理</h2><p>执行 <strong>docker pull</strong> 时，操作实际上由 Docker 守护进程 (<strong>dockerd</strong>) 完成。因此，代理设置需要应用到 <strong>dockerd</strong> 的运行环境中，而 <strong>dockerd</strong> 的运行环境是由 <strong>systemd</strong> 管控的，所以需要在 <strong>systemd</strong> 中进行配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/systemd/system/docker.service.d</span><br><span class="line">sudo <span class="built_in">touch</span> /etc/systemd/system/docker.service.d/proxy.conf</span><br></pre></td></tr></table></figure><p>在这个<strong>proxy.conf</strong>文件（可以是任意***.conf**的形式）中，添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">&quot;HTTP_PROXY=http://proxy.example.com:10809/&quot;</span></span><br><span class="line">Environment=<span class="string">&quot;HTTPS_PROXY=http://proxy.example.com:10809/&quot;</span></span><br><span class="line">Environment=<span class="string">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span></span><br></pre></td></tr></table></figure><p>配置完成后，使用以下命令重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="2-container-代理"><a class="markdownIt-Anchor" href="#2-container-代理"></a> 2. Container 代理</h2><p>在容器运行阶段，如果需要代理上网，则需要配置 <strong>~/.docker/config.json</strong>。以下配置，只在 <strong>Docker17.07</strong> 及以上版本生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="string">&quot;proxies&quot;</span>:</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="string">&quot;default&quot;</span>:</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="string">&quot;httpProxy&quot;</span>: <span class="string">&quot;http://proxy.example.com:10809&quot;</span>,</span><br><span class="line">     <span class="string">&quot;httpsProxy&quot;</span>: <span class="string">&quot;http://proxy.example.com:10809&quot;</span>,</span><br><span class="line">     <span class="string">&quot;noProxy&quot;</span>: <span class="string">&quot;localhost,127.0.0.1,.example.com&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后，使用以下命令重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>以上是用户级的配置，除了 <strong>proxies</strong>，<strong>docker login</strong> 等相关信息也会在其中，而且还可以配置信息展示的格式、插件参数等。</p><p>此外，容器的网络代理，也可以直接在其运行时通过 <strong>-e</strong> 注入 <strong>http_proxy</strong> 等环境变量，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-e http_proxy=http://proxy.example.com:8080 \</span><br><span class="line">-e https_proxy=http://proxy.example.com:8080 \</span><br><span class="line">my-container</span><br></pre></td></tr></table></figure><h2 id="3-docker-build-代理"><a class="markdownIt-Anchor" href="#3-docker-build-代理"></a> 3. Docker Build 代理</h2><p>虽然 <strong>docker build</strong> 的本质，也是启动一个容器，但是环境会略有不同，用户级配置无效。在构建时，需要注入 <strong>http_proxy</strong> 等参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker build . \</span><br><span class="line">    --build-arg <span class="string">&quot;HTTP_PROXY=http://proxy.example.com:10809/&quot;</span> \</span><br><span class="line">    --build-arg <span class="string">&quot;HTTPS_PROXY=http://proxy.example.com:10809/&quot;</span> \</span><br><span class="line">    --build-arg <span class="string">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span> \</span><br><span class="line">    -t your/image:tag</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：无论是 <strong>docker run</strong> 还是 <strong>docker build</strong>，默认是网络隔绝的。如果代理使用的是 localhost:10809 这类，则会无效。这类仅限本地的代理，必须加上 <strong>–network host</strong> 才能正常使用。而一般则需要配置代理的外部IP，而且代理本身要开启 Gateway 模式。</p><h1 id="三-docker-常用命令"><a class="markdownIt-Anchor" href="#三-docker-常用命令"></a> 三、Docker 常用命令</h1><h3 id="1-docker-run-命令"><a class="markdownIt-Anchor" href="#1-docker-run-命令"></a> ① docker run 命令</h3><blockquote><p><strong>docker run</strong> 用于创建并启动容器,以下是常用参数说明:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name container-name             <span class="comment"># 指定容器名称</span></span><br><span class="line">    --network network-name            <span class="comment"># 指定网络</span></span><br><span class="line">    --restart policy                  <span class="comment"># 容器重启策略</span></span><br><span class="line">    --cpus 1.5                        <span class="comment"># 限制 CPU 使用量</span></span><br><span class="line">    --memory 512m                     <span class="comment"># 限制内存使用量</span></span><br><span class="line">    --memory-swap 1g                  <span class="comment"># 限制内存交换区大小</span></span><br><span class="line">    --privileged                      <span class="comment"># 赋予容器特权</span></span><br><span class="line">    --device /dev/sda:/dev/sda        <span class="comment"># 映射设备</span></span><br><span class="line">    --dns 8.8.8.8                     <span class="comment"># 指定 DNS 服务器</span></span><br><span class="line">    -p host-port:container-port       <span class="comment"># 端口映射</span></span><br><span class="line">    -v ./host/path:/container/path    <span class="comment"># 挂载主机目录</span></span><br><span class="line">    -v volume-name:/container/path    <span class="comment"># 挂载数据卷</span></span><br><span class="line">    -e VARIABLE=value                 <span class="comment"># 设置环境变量</span></span><br><span class="line">    image-name[:tag]                  <span class="comment"># 指定镜像及版本</span></span><br></pre></td></tr></table></figure><p>其中 <strong>–restart</strong> 有以下策略：</p><table><thead><tr><th style="text-align:center">策略</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>no</code></td><td style="text-align:center">默认策略,容器退出时不重启</td></tr><tr><td style="text-align:center"><code>unless-stopped</code></td><td style="text-align:center">总是重启容器,但如果容器之前被手动停止,则在 Docker 服务重启时不会启动容器</td></tr><tr><td style="text-align:center"><code>always</code></td><td style="text-align:center">总是重启容器,即使容器被手动停止,在 Docker 服务重启时也会启动容器</td></tr><tr><td style="text-align:center"><code>on-failure[:max-retries]</code></td><td style="text-align:center">仅在容器以非零状态码退出时重启,可以指定最大重试次数</td></tr></tbody></table><blockquote><p><strong>unless-stopped</strong> 和 <strong>always</strong> 的区别是在手动停止(docker stop container-name/container-id) 后，always  会在 docker 守护进程或主机重启时，自动重启容器，而 unless-stopped 不会；在非手动重启时，两者效果一样。</p></blockquote><h3 id="2-容器生命周期管理"><a class="markdownIt-Anchor" href="#2-容器生命周期管理"></a> ② 容器生命周期管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">docker start container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止容器</span></span><br><span class="line">docker stop container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启容器</span></span><br><span class="line">docker restart container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂停容器</span></span><br><span class="line">docker pause container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复容器</span></span><br><span class="line">docker unpause container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除容器(需要先停止)</span></span><br><span class="line">docker <span class="built_in">rm</span> container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除容器</span></span><br><span class="line">docker <span class="built_in">rm</span> -f container-name</span><br></pre></td></tr></table></figure><h3 id="3-容器状态查看"><a class="markdownIt-Anchor" href="#3-容器状态查看"></a> ③ 容器状态查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看运行中的容器</span></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有容器(包括已停止)</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器日志</span></span><br><span class="line">docker logs container-name</span><br><span class="line">docker logs -f container-name    <span class="comment"># 实时查看</span></span><br><span class="line">docker logs -n 100 container-name <span class="comment"># 查看最后100行</span></span><br><span class="line">docker logs --since 2024-01-01 container-name <span class="comment"># 查看指定时间后的日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器详细信息</span></span><br><span class="line">docker inspect container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器资源使用情况</span></span><br><span class="line">docker stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器中运行的进程</span></span><br><span class="line">docker top container-name</span><br></pre></td></tr></table></figure><h3 id="4-镜像管理"><a class="markdownIt-Anchor" href="#4-镜像管理"></a> ④ 镜像管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索镜像</span></span><br><span class="line">docker search image-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull image-name[:tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地镜像</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像</span></span><br><span class="line">docker rmi image-name[:tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">docker build -t image-name[:tag] .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送镜像到仓库</span></span><br><span class="line">docker push image-name[:tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存镜像为tar文件</span></span><br><span class="line">docker save -o filename.tar image-name[:tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载tar文件为镜像</span></span><br><span class="line">docker load -i filename.tar</span><br></pre></td></tr></table></figure><h3 id="5-网络管理"><a class="markdownIt-Anchor" href="#5-网络管理"></a> ⑤ 网络管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建网络</span></span><br><span class="line">docker network create network-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网络列表</span></span><br><span class="line">docker network <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网络详细信息</span></span><br><span class="line">docker network inspect network-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将容器连接到网络</span></span><br><span class="line">docker network connect network-name container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 断开容器与网络的连接</span></span><br><span class="line">docker network disconnect network-name container-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除网络</span></span><br><span class="line">docker network <span class="built_in">rm</span> network-name</span><br></pre></td></tr></table></figure><h3 id="6-数据卷管理"><a class="markdownIt-Anchor" href="#6-数据卷管理"></a> ⑥ 数据卷管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据卷</span></span><br><span class="line">docker volume create volume-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据卷列表</span></span><br><span class="line">docker volume <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据卷详细信息</span></span><br><span class="line">docker volume inspect volume-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据卷</span></span><br><span class="line">docker volume <span class="built_in">rm</span> volume-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有未使用的数据卷</span></span><br><span class="line">docker volume prune</span><br></pre></td></tr></table></figure><h3 id="7-系统维护"><a class="markdownIt-Anchor" href="#7-系统维护"></a> ⑦ 系统维护</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 Docker 系统信息</span></span><br><span class="line">docker info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 Docker 版本</span></span><br><span class="line">docker version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Docker 磁盘使用情况</span></span><br><span class="line">docker system <span class="built_in">df</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理不再使用的 Docker 对象</span></span><br><span class="line">docker system prune  <span class="comment"># 清理停止的容器、未使用的网络和悬空镜像</span></span><br><span class="line">docker system prune -a  <span class="comment"># 同时清理未使用的镜像</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时事件流</span></span><br><span class="line">docker events</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录到 Docker 仓库</span></span><br><span class="line">docker login [registry-url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 Docker 仓库登出</span></span><br><span class="line">docker <span class="built_in">logout</span> [registry-url]</span><br></pre></td></tr></table></figure><h1 id="四-docker-compose"><a class="markdownIt-Anchor" href="#四-docker-compose"></a> 四、Docker Compose</h1><h2 id="1-常用命令"><a class="markdownIt-Anchor" href="#1-常用命令"></a> 1. 常用命令</h2><h3 id="1-启动服务"><a class="markdownIt-Anchor" href="#1-启动服务"></a> ① 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动所有服务</span></span><br><span class="line">docker compose up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以守护进程模式在后台启动</span></span><br><span class="line">docker compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动特定服务</span></span><br><span class="line">docker compose up &lt;service_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务扩展</span></span><br><span class="line">docker compose up --scale &lt;service_name&gt;=&lt;service_num&gt;</span><br></pre></td></tr></table></figure><h3 id="2-停止服务"><a class="markdownIt-Anchor" href="#2-停止服务"></a> ② 停止服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止并移除所有容器</span></span><br><span class="line">docker compose down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有容器但不移除</span></span><br><span class="line">docker compose stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止特定服务</span></span><br><span class="line">docker compose stop &lt;service_name&gt;</span><br></pre></td></tr></table></figure><h3 id="3-构建服务"><a class="markdownIt-Anchor" href="#3-构建服务"></a> ③ 构建服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建或重新构建服务</span></span><br><span class="line">docker compose build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建特定服务</span></span><br><span class="line">docker compose build &lt;service_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用缓存构建</span></span><br><span class="line">docker compose build --no-cache <span class="comment"># 构建或重新构建服务</span></span><br><span class="line">docker compose build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建特定服务</span></span><br><span class="line">docker compose build &lt;service_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用缓存构建</span></span><br><span class="line">docker compose build --no-cache</span><br></pre></td></tr></table></figure><h3 id="4-查看状态"><a class="markdownIt-Anchor" href="#4-查看状态"></a> ④ 查看状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看运行中的容器</span></span><br><span class="line">docker compose ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务日志</span></span><br><span class="line">docker compose logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时跟踪日志</span></span><br><span class="line">docker compose logs -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看特定服务的日志</span></span><br><span class="line">docker compose logs &lt;service_name&gt;</span><br></pre></td></tr></table></figure><h3 id="5-管理容器"><a class="markdownIt-Anchor" href="#5-管理容器"></a> ⑤ 管理容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">docker compose restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启特定服务</span></span><br><span class="line">docker compose restart &lt;service_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂停服务</span></span><br><span class="line">docker compose pause</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复服务</span></span><br><span class="line">docker compose unpause</span><br></pre></td></tr></table></figure><h3 id="6-执行命令"><a class="markdownIt-Anchor" href="#6-执行命令"></a> ⑥ 执行命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在运行的容器中执行命令</span></span><br><span class="line">docker compose <span class="built_in">exec</span> &lt;service_name&gt; &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在新容器中运行一次性命令</span></span><br><span class="line">docker compose run &lt;service_name&gt; &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="7-配置相关"><a class="markdownIt-Anchor" href="#7-配置相关"></a> ⑦ 配置相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证 docker-compose.yml 文件格式是否正确</span></span><br><span class="line">docker compose config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有服务</span></span><br><span class="line">docker compose ps --services</span><br></pre></td></tr></table></figure><h3 id="8-一些实用的组合命令"><a class="markdownIt-Anchor" href="#8-一些实用的组合命令"></a> ⑧ 一些实用的组合命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 完全重建并启动所有服务</span></span><br><span class="line">docker compose down &amp;&amp; docker compose build --no-cache &amp;&amp; docker compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有容器的资源使用情况</span></span><br><span class="line">docker compose top</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制重新创建所有容器</span></span><br><span class="line">docker compose up -d --force-recreate</span><br></pre></td></tr></table></figure><h2 id="2-docker-composeyml-模板"><a class="markdownIt-Anchor" href="#2-docker-composeyml-模板"></a> 2. docker-compose.yml 模板</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定 docker-compose 文件版本</span></span><br><span class="line">version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义服务</span></span><br><span class="line">services:</span><br><span class="line">  <span class="comment"># Web 应用服务</span></span><br><span class="line">  webapp:</span><br><span class="line">    <span class="comment"># 构建配置</span></span><br><span class="line">    build:</span><br><span class="line">      context: ./path/to/build/context  <span class="comment"># 构建上下文路径</span></span><br><span class="line">      dockerfile: Dockerfile  <span class="comment"># Dockerfile 位置</span></span><br><span class="line">      args:  <span class="comment"># 构建参数</span></span><br><span class="line">        BUILD_ENV: production</span><br><span class="line">    <span class="comment"># 或直接使用镜像</span></span><br><span class="line">    image: nginx:latest</span><br><span class="line">    container_name: my-webapp  <span class="comment"># 容器名称</span></span><br><span class="line">    hostname: webapp-host  <span class="comment"># 主机名</span></span><br><span class="line">    restart: unless-stopped  <span class="comment"># 重启策略：no, always, on-failure, unless-stopped</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 环境变量配置</span></span><br><span class="line">    environment:</span><br><span class="line">      - NODE_ENV=production</span><br><span class="line">      - API_KEY=xxx</span><br><span class="line">    <span class="comment"># 或使用环境变量文件</span></span><br><span class="line">    env_file:</span><br><span class="line">      - .<span class="keyword">env</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 端口映射</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;80:80&quot;</span>      <span class="comment"># HOST:CONTAINER</span></span><br><span class="line">      - <span class="string">&quot;443:443&quot;</span></span><br><span class="line">      - <span class="string">&quot;3000-3010:3000-3010&quot;</span>  <span class="comment"># 端口范围映射</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 卷挂载</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./app:/usr/src/app     <span class="comment"># 绑定挂载</span></span><br><span class="line">      - data-<span class="keyword">volume</span><span class="language-bash">:/data      <span class="comment"># 命名卷</span></span></span><br><span class="line">      - /tmp:/tmp:ro          <span class="comment"># 只读挂载</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 依赖关系</span></span><br><span class="line">    depends_on:</span><br><span class="line">      - redis</span><br><span class="line">      - postgres</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 健康检查</span></span><br><span class="line">    <span class="keyword">healthcheck</span><span class="language-bash">:</span></span><br><span class="line">      test: [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;curl&quot;</span>, <span class="string">&quot;-f&quot;</span>, <span class="string">&quot;http://localhost&quot;</span>]</span><br><span class="line">      interval: <span class="number">30</span>s</span><br><span class="line">      timeout: <span class="number">10</span>s</span><br><span class="line">      retries: <span class="number">3</span></span><br><span class="line">      start_period: <span class="number">40</span>s</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 资源限制</span></span><br><span class="line">    deploy:</span><br><span class="line">      resources:</span><br><span class="line">        limits:</span><br><span class="line">          cpus: <span class="string">&#x27;0.50&#x27;</span></span><br><span class="line">          memory: <span class="number">512</span>M</span><br><span class="line">        reservations:</span><br><span class="line">          cpus: <span class="string">&#x27;0.25&#x27;</span></span><br><span class="line">          memory: <span class="number">256</span>M</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 网络配置</span></span><br><span class="line">    networks:</span><br><span class="line">      - frontend</span><br><span class="line">      - backend</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 日志配置</span></span><br><span class="line">    logging:</span><br><span class="line">      driver: <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      options:</span><br><span class="line">        max-size: <span class="string">&quot;200k&quot;</span></span><br><span class="line">        max-file: <span class="string">&quot;10&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Redis 服务</span></span><br><span class="line">  redis:</span><br><span class="line">    image: redis:alpine</span><br><span class="line">    command: redis-server --appendonly yes  <span class="comment"># 自定义命令</span></span><br><span class="line">    volumes:</span><br><span class="line">      - redis-data:/data</span><br><span class="line"></span><br><span class="line">  <span class="comment"># PostgreSQL 服务</span></span><br><span class="line">  postgres:</span><br><span class="line">    image: postgres:<span class="number">13</span></span><br><span class="line">    environment:</span><br><span class="line">      POSTGRES_USER: <span class="keyword">user</span></span><br><span class="line">      POSTGRES_PASSWORD: password</span><br><span class="line">      POSTGRES_DB: mydb</span><br><span class="line">    volumes:</span><br><span class="line">      - postgres-data:/var/lib/postgresql/data</span><br><span class="line">    <span class="comment"># 覆盖默认的 entrypoint</span></span><br><span class="line">    <span class="keyword">entrypoint</span><span class="language-bash">: docker-entrypoint.sh postgres</span></span><br><span class="line">    <span class="comment"># 用户设置</span></span><br><span class="line">    <span class="keyword">user</span>: postgres</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义卷</span></span><br><span class="line">volumes:</span><br><span class="line">  data-<span class="keyword">volume</span><span class="language-bash">:    <span class="comment"># 命名卷</span></span></span><br><span class="line">    driver: local</span><br><span class="line">  redis-data:</span><br><span class="line">    driver: local</span><br><span class="line">  postgres-data:</span><br><span class="line">    driver: local</span><br><span class="line">    driver_opts:  <span class="comment"># 驱动选项</span></span><br><span class="line">      type: none</span><br><span class="line">      device: /path/on/host</span><br><span class="line">      o: bind</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义网络</span></span><br><span class="line">networks:</span><br><span class="line">  frontend:</span><br><span class="line">    driver: bridge</span><br><span class="line">    ipam:     <span class="comment"># IP 地址管理</span></span><br><span class="line">      driver: default</span><br><span class="line">      config:</span><br><span class="line">        - subnet: <span class="number">172.16</span>.<span class="number">238.0</span>/<span class="number">24</span></span><br><span class="line">  backend:</span><br><span class="line">    driver: bridge</span><br><span class="line">    <span class="comment"># 启用 IPv6</span></span><br><span class="line">    enable_ipv6: true</span><br><span class="line">    <span class="comment"># 外部网络</span></span><br><span class="line">    external: true</span><br><span class="line">    name: existing-network</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置默认值</span></span><br><span class="line">configs:</span><br><span class="line">  http_config:</span><br><span class="line">    file: ./httpd.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密钥管理</span></span><br><span class="line">secrets:</span><br><span class="line">  server_certificate:</span><br><span class="line">    file: ./server.cert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设备映射</span></span><br><span class="line"><span class="comment">#devices:</span></span><br><span class="line"><span class="comment">#  - &quot;/dev/ttyUSB0:/dev/ttyUSB0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DNS 设置</span></span><br><span class="line"><span class="comment">#dns:</span></span><br><span class="line"><span class="comment">#  - 8.8.8.8</span></span><br><span class="line"><span class="comment">#  - 8.8.4.4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展字段</span></span><br><span class="line">x-custom:</span><br><span class="line">  foo: bar</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql 相关</title>
      <link href="/posts/2.html"/>
      <url>/posts/2.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-ddl"><a class="markdownIt-Anchor" href="#一-ddl"></a> 一、 DDL</h1><h2 id="1-数据库操作"><a class="markdownIt-Anchor" href="#1-数据库操作"></a> 1. 数据库操作</h2><h3 id="1查询"><a class="markdownIt-Anchor" href="#1查询"></a> （1）查询</h3><ul><li><p>查询所有数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure></li><li><p>查询当前数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure></li></ul><h3 id="2创建"><a class="markdownIt-Anchor" href="#2创建"></a> （2）创建</h3><ul><li><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database [if not exists] 数据库名 [default charset 字符集] [collate 排序规则];</span><br></pre></td></tr></table></figure></li></ul><h3 id="3删除"><a class="markdownIt-Anchor" href="#3删除"></a> （3）删除</h3><ul><li><p>删除数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database [if exists] 数据库名</span><br></pre></td></tr></table></figure></li></ul><h3 id="4使用"><a class="markdownIt-Anchor" href="#4使用"></a> （4）使用</h3><ul><li><p>使用数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-表操作"><a class="markdownIt-Anchor" href="#2-表操作"></a> 2. 表操作</h2><h3 id="1查询-show-desc"><a class="markdownIt-Anchor" href="#1查询-show-desc"></a> （1）查询 <code>show</code> | <code>desc</code></h3><ul><li><p>查询当前数据库所有表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure></li><li><p>查询表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">desc 表名; </span><br><span class="line">describe 表名;</span><br><span class="line">show columns from 表名;</span><br></pre></td></tr></table></figure></li><li><p>查询指定表的建表语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create table 表名;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2创建-create-table-create-index"><a class="markdownIt-Anchor" href="#2创建-create-table-create-index"></a> （2）创建 <code>create table</code> | <code>create index</code></h3><ul><li><p>建表语句</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table 表名 (列名1 数据类型 [约束] [comment 注释], 列名2 数据类型 [约束] [comment 注释], ...);</span><br></pre></td></tr></table></figure></li><li><p>创建索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create [unique|fulltext|spatial] index 索引名称 on 表名(字段名称[(长度)] [asc|desc])</span><br></pre></td></tr></table></figure></li></ul><h3 id="3修改-alter-table"><a class="markdownIt-Anchor" href="#3修改-alter-table"></a> （3）修改 <code>alter table</code></h3><ul><li><p>添加字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 </span><br><span class="line">add [column] 字段名 数据类型 [约束] [comment 注释];</span><br></pre></td></tr></table></figure></li><li><p>添加索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 </span><br><span class="line">add [unique|fulltext|spatial] index 索引名称(字段名称[(长度)] [asc|desc]);</span><br></pre></td></tr></table></figure></li><li><p>添加 <code>check</code> 约束（域完整性）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名</span><br><span class="line">    add constraint 约束名称 check (条件);</span><br></pre></td></tr></table></figure></li><li><p>添加唯一约束（实体完整性）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 唯一约束</span><br><span class="line">alter table 表名</span><br><span class="line">    add constraint [约束名称（若不设置，则以字段名称作为约束名称）] unique (字段名称);</span><br></pre></td></tr></table></figure></li><li><p>添加主键约束和外键约束（参照完整性）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 主键约束</span><br><span class="line">alter table 表名</span><br><span class="line">add constraint [约束名称（在 MySql 即使设置该参数也会被忽略）] primary key (字段名称);</span><br><span class="line"></span><br><span class="line"># 外键约束</span><br><span class="line">alter table 表名</span><br><span class="line">    add constraint 约束名称 foreign key(字段名称)</span><br><span class="line">        references 被引用表名 (被引用字段名称);</span><br><span class="line"># 注意：必须先为被引用字段创建索引，通常是主键索引</span><br></pre></td></tr></table></figure></li><li><p>修改数据类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table </span><br><span class="line">modify 字段名 新数据类型 [约束] [comment 注释];</span><br></pre></td></tr></table></figure></li><li><p>修改字段名和数据类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table </span><br><span class="line">change 旧字段名 新字段名 新数据类型 [约束] [comment 注释];</span><br></pre></td></tr></table></figure></li><li><p>修改表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table 旧表名 rename to 新表名;</span><br><span class="line"># 或者</span><br><span class="line">rename table 旧表名 to 新表名;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4删除-drop-table-truncate-table-alter-table-drop-drop-index"><a class="markdownIt-Anchor" href="#4删除-drop-table-truncate-table-alter-table-drop-drop-index"></a> （4）删除 <code>drop table</code> | <code>truncate table</code> | <code>alter table drop</code>  | <code>drop index</code></h3><ul><li><p>删除表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table [if exists] 表名;</span><br></pre></td></tr></table></figure></li><li><p>删除，并重建指定表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truncate table 表名;</span><br></pre></td></tr></table></figure></li><li><p>删除字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 </span><br><span class="line">drop 字段名;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名</span><br><span class="line">drop constraint 约束名;</span><br><span class="line"></span><br><span class="line"># 删除主键约束有三种写法，分别是：</span><br><span class="line">alter table 表名</span><br><span class="line">drop primary key;</span><br><span class="line"># 或者 (不推荐)</span><br><span class="line">alter table 表名</span><br><span class="line">drop constraint `primary`;</span><br><span class="line"># 或者 (不推荐)</span><br><span class="line">drop index `primary` on 表名;</span><br></pre></td></tr></table></figure></li><li><p>删除索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名</span><br><span class="line">drop index 索引名;</span><br><span class="line"># 或者</span><br><span class="line">drop index 索引名 on 表名;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5常用的数据类型"><a class="markdownIt-Anchor" href="#5常用的数据类型"></a> （5）常用的数据类型</h3><h4 id="1-数值类型"><a class="markdownIt-Anchor" href="#1-数值类型"></a> ① 数值类型</h4><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">大小</th><th style="text-align:center">范围（有符号）</th><th style="text-align:center">范围（无符号）</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center"><code>tinyint</code></td><td style="text-align:center">1 Bytes</td><td style="text-align:center">(-128，127)</td><td style="text-align:center">(0，255)</td><td style="text-align:center">小整数值</td></tr><tr><td style="text-align:center"><code>smallint</code></td><td style="text-align:center">2 Bytes</td><td style="text-align:center">(-32 768，32 767)</td><td style="text-align:center">(0，65 535)</td><td style="text-align:center">大整数值</td></tr><tr><td style="text-align:center"><code>mediumint</code></td><td style="text-align:center">3 Bytes</td><td style="text-align:center">(-8 388 608，8 388 607)</td><td style="text-align:center">(0，16 777 215)</td><td style="text-align:center">大整数值</td></tr><tr><td style="text-align:center"><code>int</code> <code>integer</code></td><td style="text-align:center">4 Bytes</td><td style="text-align:center">(-2 147 483 648，2 147 483 647)</td><td style="text-align:center">(0，4 294 967 295)</td><td style="text-align:center">大整数值</td></tr><tr><td style="text-align:center"><code>bigint</code></td><td style="text-align:center">8 Bytes</td><td style="text-align:center">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td style="text-align:center">(0，18 446 744 073 709 551 615)</td><td style="text-align:center">极大整数值</td></tr><tr><td style="text-align:center"><code>float</code></td><td style="text-align:center">4 Bytes</td><td style="text-align:center">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td style="text-align:center">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td style="text-align:center">单精度 浮点数值</td></tr><tr><td style="text-align:center"><code>double</code></td><td style="text-align:center">8 Bytes</td><td style="text-align:center">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="text-align:center">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="text-align:center">双精度 浮点数值</td></tr><tr><td style="text-align:center"><code>decimal</code></td><td style="text-align:center">对decimal(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td style="text-align:center">依赖于M和D的值</td><td style="text-align:center">依赖于M和D的值</td><td style="text-align:center">小数值</td></tr></tbody></table><h4 id="2-日期类型"><a class="markdownIt-Anchor" href="#2-日期类型"></a> ② 日期类型</h4><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">大小（Bytes）</th><th style="text-align:center">范围</th><th style="text-align:center">格式</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center"><code>date</code></td><td style="text-align:center">3</td><td style="text-align:center">1000-01-01/9999-12-31</td><td style="text-align:center">YYYY-MM-DD</td><td style="text-align:center">日期值</td></tr><tr><td style="text-align:center"><code>time</code></td><td style="text-align:center">3</td><td style="text-align:center">‘-838:59:59’/‘838:59:59’</td><td style="text-align:center">HH:MM:SS</td><td style="text-align:center">时间值或持续时间</td></tr><tr><td style="text-align:center"><code>year</code></td><td style="text-align:center">1</td><td style="text-align:center">1901/2155</td><td style="text-align:center">YYYY</td><td style="text-align:center">年份值</td></tr><tr><td style="text-align:center"><code>datatime</code></td><td style="text-align:center">8</td><td style="text-align:center">‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td><td style="text-align:center">YYYY-MM-DD hh:mm:ss</td><td style="text-align:center">混合日期和时间值</td></tr><tr><td style="text-align:center"><code>timestamp</code></td><td style="text-align:center">4</td><td style="text-align:center">‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-19 03:14:07’ UTC结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td style="text-align:center">YYYY-MM-DD hh:mm:ss</td><td style="text-align:center">混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="3-字符串类型"><a class="markdownIt-Anchor" href="#3-字符串类型"></a> ③ 字符串类型</h4><blockquote><p>char(n) 和 varchar(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。</p></blockquote><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">大小</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center"><code>char</code></td><td style="text-align:center">0-255 bytes</td><td style="text-align:center">定长字符串</td></tr><tr><td style="text-align:center"><code>varchar</code></td><td style="text-align:center">0-65535 bytes</td><td style="text-align:center">变长字符串</td></tr><tr><td style="text-align:center"><code>tinyblob</code></td><td style="text-align:center">0-255 bytes</td><td style="text-align:center">不超过 255 个字符的二进制字符串</td></tr><tr><td style="text-align:center"><code>tinytext</code></td><td style="text-align:center">0-255 bytes</td><td style="text-align:center">短文本字符串</td></tr><tr><td style="text-align:center"><code>blob</code></td><td style="text-align:center">0-65 535 bytes</td><td style="text-align:center">二进制形式的长文本数据</td></tr><tr><td style="text-align:center"><code>text</code></td><td style="text-align:center">0-65 535 bytes</td><td style="text-align:center">长文本数据</td></tr><tr><td style="text-align:center"><code>mediumblob</code></td><td style="text-align:center">0-16 777 215 bytes</td><td style="text-align:center">二进制形式的中等长度文本数据</td></tr><tr><td style="text-align:center"><code>mdeiumtext</code></td><td style="text-align:center">0-16 777 215 bytes</td><td style="text-align:center">中等长度文本数据</td></tr><tr><td style="text-align:center"><code>longblob</code></td><td style="text-align:center">0-4 294 967 295 bytes</td><td style="text-align:center">二进制形式的极大文本数据</td></tr><tr><td style="text-align:center"><code>longtext</code></td><td style="text-align:center">0-4 294 967 295 bytes</td><td style="text-align:center">极大文本数据</td></tr></tbody></table><h2 id="3-视图操作"><a class="markdownIt-Anchor" href="#3-视图操作"></a> 3.  视图操作</h2><h1 id="二-dml"><a class="markdownIt-Anchor" href="#二-dml"></a> 二、DML</h1><h1 id="三-dql"><a class="markdownIt-Anchor" href="#三-dql"></a> 三、 DQL</h1><h1 id="四-dcl"><a class="markdownIt-Anchor" href="#四-dcl"></a> 四、 DCL</h1>]]></content>
      
      
      
        <tags>
            
            <tag> MySql </tag>
            
            <tag> Sql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可解释机器学习 —— LIME 篇</title>
      <link href="/posts/1.html"/>
      <url>/posts/1.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-什么是解释"><a class="markdownIt-Anchor" href="#一-什么是解释"></a> 一、什么是解释？</h2><p>所谓解释，指的是使用我们能够理解的方法（如图像、文本、简化的模型等）来揭示输入数据的特定部分（例如文本中的词语、图像中的像素）与模型做出特定预测之间的关系。这种解释帮助我们定性地理解模型的工作原理和决策过程，尤其是对于那些复杂且通常被视为“黑盒”的模型。简而言之，解释旨在建立模型输入与输出之间的直观联系，使得模型的行为对于人类用户更加透明和可理解。</p><h2 id="二-我们为什么需要解释"><a class="markdownIt-Anchor" href="#二-我们为什么需要解释"></a> 二、我们为什么需要解释？</h2><ol><li>决定是否该信任某个模型/预测</li><li>在不同模型之间做出选择</li><li>通过特征工程改进模型</li><li>确定某个模型为什么不可信</li></ol><blockquote><p>由此可以很容易知道解释在机器学习领域的重要性，但现如今所使用的很多机器学习模型尽管有着不错的性能，然而在解释性方面却是不足的。在机器学习模型的很多应用中，我们有时候必须要知道模型为什么做出这个预测，以及这个预测是否合理，而LIME正是为解决这个问题而诞生的算法。</p></blockquote><h2 id="三-相关论文"><a class="markdownIt-Anchor" href="#三-相关论文"></a> 三、相关论文</h2><p><a href="https://dl.acm.org/doi/abs/10.1145/2939672.2939778"><em>LIME:</em> Ribeiro, Marco Tulio, Sameer Singh, and Carlos Guestrin. “Why should i trust you?: Explaining the predictions of any classifier.” Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM, 2016.</a></p><p><em><strong>论文的主要成果：</strong></em></p><p><em>We propose providing explanations for individual predictions as a solution to the “trusting a prediction” problem, and selecting multiple such predictions (and explanations) as a solution to the “trusting the model” problem.</em></p><p><em>We proposed LIME, a modular and extensible approach to faithfully explain the predictions of any model in an interpretable manner. We also introduced SP-LIME, a method to select representative and non-redundant predictions, providing a global view of the model to users.</em></p><p><em><strong>代码仓库：</strong></em> <a href="https://github.com/marcotcr/lime">Lime: Explaining the predictions of any machine learning classifier - marcotcr/lime</a></p><h2 id="四-lime算法"><a class="markdownIt-Anchor" href="#四-lime算法"></a> 四、LIME算法</h2><h3 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1. 介绍</h3><p><strong>LIME</strong>（即Local Interpretable Model-Agnostic Explanations）是一种局部解释的算法，它旨在为分类器或回归器的预测提供解释。通过使用“可解释特征”训练“可解释模型”，在“样本的局部线性邻域”拟合“原模型”，从而实现对复杂模型预测的解释。这种方法有助于增加模型的透明度和可信度，尤其是在需要解释预测以获得用户信任的情况下。</p><blockquote><p>LIME属于事后解释方法，具有局部性、可解释性、与模型无关性的特征。</p></blockquote><h3 id="2-原理"><a class="markdownIt-Anchor" href="#2-原理"></a> 2. 原理</h3><p>如下图所示，LIME首先在待解释样本点周围进行扰动采样，并按照扰动样本与原样本之间的相似度或距离赋予样本权重，然后用原模型对这些样本进行预测而获得标签值，并使用这些局部样本训练一个可解释性比较强的线性模型，这样就可以利用线性模型的可解释性对复杂模型进行局部解释。</p><p><img src="https://api.aspark.cc/image/202403172154071.png" alt="" /></p><p>算法使用目标函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ξ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi><munder><mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>i</mi><mi>n</mi></mo><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow></munder></mi><mtext> </mtext><mi>L</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><msub><mi>π</mi><mi>x</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\xi(x) = \underset{g \in G}{argmin}\ L(f, g, \pi_{x}) + \Omega(g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.824879em;vertical-align:-1.074879em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6595200000000001em;"><span style="top:-2.161229em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">G</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.074879em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span> 衡量两个模型之间的差异。</p><h3 id="3-优点"><a class="markdownIt-Anchor" href="#3-优点"></a> 3. 优点</h3><ul><li>模型无关性（通用性强）：LIME能够兼容任何一种机器学习算法，具有广泛的适用性</li><li>可解释单个样本预测结果、选取代表性样本</li><li>LIME是少数适用于表格数据、文本和图像的方法之一</li></ul><h3 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h3><ul><li>局部保真度不意味着全局保真度：在全局上重要的特征在局部上可能并不重要，反之亦然。</li><li>原模型如果在局部仍然非线性，可解释模型难以拟合原模型</li><li>时间成本高：每个待测样本都需训练对应可解释模型，耗时长</li><li>通过扰动得到的样本符合高斯分布，却忽略了特征之间的关系</li></ul><h3 id="4-实例"><a class="markdownIt-Anchor" href="#4-实例"></a> 4. 实例</h3><p>使用20newsgroups数据集中的alt.atheism和soc.religion.christianlian训练一个RFC模型，并且使用LIME对单个样本进行解释</p><ul><li>对选定的单个样本进行解释，结果如下：（样本的目标值为atheism）</li></ul><p><img src="https://api.aspark.cc/image/202403172154632.png" alt="" /></p><ul><li>将上述样本中的headers、footers、quotes移除后，再对该样本进行解释，结果如下：</li></ul><p><img src="https://api.aspark.cc/image/202403172155176.png" alt="" /></p><p>通过LIME我们可以很容易看出模型模型做出一个预测依赖于哪些特征，以及根据这些特征特征做出的预测是否合理。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 可解释机器学习 </tag>
            
            <tag> LIME </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
