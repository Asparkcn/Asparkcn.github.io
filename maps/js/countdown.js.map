{"version":3,"file":"../../js/countdown.js","names":["CountdownTimer","getNextFestival","today","Date","getNextTypeFestivals","type","checkDate","i","setDate","getDate","currentSolar","Solar","fromDate","festivals","getFestivals","length","slice","map","name","date","toYmd","timestamp","getTime","Lunar","year","getFullYear","month","getMonth","toString","padStart","day","currentLunar","solarFestivals","getYear","getDay","lunarFestivals","getJulianDay","nextJieQi","getNextJieQi","jieQiFestival","getName","getSolar","allFestivals","todayStart","todayEnd","todayFestival","find","f","filter","sort","a","b","config","units","text","divider","unit","week","countdownText","future","getTimeUnit","now","currentHour","getHours","remaining","percentage","toFixed","start","end","currentDay","setHours","remainingDays","Math","floor","totalDays","passedDays","updateCountdown","elements","id","document","getElementById","some","el","eventName","eventDate","daysUntil","countRight","nextFestival","timeData","Object","keys","reduce","acc","days","ceil","isToday","textContent","innerHTML","entries","_","item","join","timer","styleSheet","createElement","head","appendChild","injectStyles","setInterval","forEach","event","addEventListener","clearInterval","stop"],"sources":["js/countdown.js"],"mappings":"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","ignoreList":[],"sourcesContent":["const CountdownTimer = (() => {\n  function getNextFestival() {\n    const today = new Date();\n\n    function getNextTypeFestivals(type) {\n      let checkDate = new Date(today);\n      for (let i = 0; i < 60; i++) {\n        checkDate.setDate(checkDate.getDate() + 1);\n        if (type === 'solar') {\n          const currentSolar = Solar.fromDate(checkDate);\n          const festivals = currentSolar.getFestivals();\n          if (festivals.length > 0) {\n            return festivals.slice(0, 1).map(name => ({\n              name,\n              type,\n              date: currentSolar.toYmd(),\n              timestamp:  checkDate.getTime()\n            }))[0];\n          }\n        } else if (type === 'lunar') {\n          const currentLunar = Lunar.fromDate(checkDate);\n          const festivals = currentLunar.getFestivals();\n          if (festivals.length > 0) {\n            let year = checkDate.getFullYear();\n            let month = (checkDate.getMonth() + 1).toString().padStart(2, '0');\n            let day = checkDate.getDate().toString().padStart(2, '0');\n            return festivals.slice(0, 1).map(name => ({\n              name,\n              type,\n              date: `${year}-${month}-${day}`,\n              timestamp: checkDate.getTime()\n            }))[0];\n          }\n        }\n      }\n    }\n\n    const currentSolar = Solar.fromDate(today);\n    const currentLunar = Lunar.fromDate(today);\n\n    let solarFestivals = currentSolar.getFestivals()\n        .slice(0, 1)\n        .map(name => ({\n          name,\n          type: 'solar',\n          date: currentSolar.toYmd(),\n          timestamp: new Date(currentSolar.getYear(), currentSolar.getMonth() - 1, currentSolar.getDay()).getTime()\n        }));\n\n    let lunarFestivals = currentLunar.getFestivals()\n        .slice(0, 1)\n        .map(name => ({\n          name,\n          type: 'lunar',\n          date: currentSolar.toYmd(),\n          timestamp: currentSolar.getJulianDay() * 86400000\n        }));\n\n    // 如果当天没有阳历或农历节日，寻找下一个\n    if (solarFestivals.length === 0) {\n      solarFestivals = [getNextTypeFestivals('solar')];\n    }\n    if (lunarFestivals.length === 0) {\n      lunarFestivals = [getNextTypeFestivals('lunar')];\n    }\n\n    const nextJieQi = currentLunar.getNextJieQi();\n    const jieQiFestival = {\n      name: nextJieQi.getName(),\n      type: 'jieqi',\n      date: nextJieQi.getSolar().toYmd(),\n      timestamp: new Date(nextJieQi.getSolar().getYear(), nextJieQi.getSolar().getMonth() - 1, nextJieQi.getSolar().getDay()).getTime()\n    };\n\n    const allFestivals = [...solarFestivals, ...lunarFestivals, jieQiFestival];\n\n    const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime();\n    const todayEnd = todayStart + 24 * 60 * 60 * 1000 - 1;\n\n    const todayFestival = allFestivals.find(f =>\n        f.timestamp >= todayStart && f.timestamp <= todayEnd\n    );\n\n    if (todayFestival) {\n      return todayFestival;\n    }\n\n    return allFestivals\n        .filter(f => f.timestamp > today.getTime())\n        .sort((a, b) => a.timestamp - b.timestamp)[0];\n  }\n\n  const config = {\n    units: {\n      day: {text: \"今日\", divider: 1, unit: \"小时\"},\n      week: {text: \"本周\", divider: 24, unit: \"天\"},\n      month: {text: \"本月\", divider: 24, unit: \"天\"},\n      year: {text: \"本年\", divider: 24, unit: \"天\"}\n    },\n    countdownText: {\n      future: \"距离\",\n      today: \"\"\n    }\n  };\n\n  function getTimeUnit(unit) {\n    const now = new Date();\n\n    if (unit === 'day') {\n      const currentHour = now.getHours();\n      return {\n        name: config.units[unit].text,\n        remaining: 24 - currentHour,\n        percentage: ((currentHour / 24) * 100).toFixed(2),\n        unit: config.units[unit].unit\n      };\n    }\n\n    // 计算周、月、年的开始和结束时间\n    let start = new Date(now);\n    let end = new Date(now);\n\n    // 获取当前日期的开始时间（0点）\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    switch(unit) {\n      case 'week':\n        // 获取本周一和周日\n        const currentDay = start.getDay() || 7; // 将周日的0转换为7\n        start = new Date(start.setDate(start.getDate() - (currentDay - 1)));\n        end = new Date(start);\n        end.setDate(start.getDate() + 6);\n        break;\n\n      case 'month':\n        // 获取本月剩余天数（从明天开始算）\n        start = today;\n        start.setDate(start.getDate() + 1); // 从明天开始\n        end = new Date(start.getFullYear(), start.getMonth() + 1, 0);\n        break;\n\n      case 'year':\n        // 获取本年剩余天数（从明天开始算）\n        start = today;\n        start.setDate(start.getDate() + 1); // 从明天开始\n        end = new Date(start.getFullYear(), 11, 31);\n        break;\n    }\n\n    // 重置时间为当天的开始和结束\n    start.setHours(0, 0, 0, 0);\n    end.setHours(23, 59, 59, 999);\n\n    // 计算剩余天数（从明天开始，不包括当前天）\n    const remainingDays = Math.floor((end - start) / (24 * 60 * 60 * 1000)) + 1;\n\n    // 计算总天数和已过天数\n    let totalDays, passedDays;\n\n    if (unit === 'month') {\n      // 本月总天数\n      totalDays = new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();\n      // 已过天数（包括今天）\n      passedDays = now.getDate();\n    } else if (unit === 'year') {\n      // 本年总天数\n      totalDays = (new Date(now.getFullYear(), 11, 31) - new Date(now.getFullYear(), 0, 1)) / (24 * 60 * 60 * 1000) + 1;\n      // 已过天数（包括今天）\n      passedDays = (today - new Date(now.getFullYear(), 0, 1)) / (24 * 60 * 60 * 1000) + 1;\n    } else { // week\n      totalDays = 7;\n      const currentDay = now.getDay() || 7;\n      passedDays = currentDay;\n    }\n\n    // 计算百分比\n    const percentage = (passedDays / totalDays) * 100;\n\n    return {\n      name: config.units[unit].text,\n      remaining: remainingDays,\n      percentage: percentage.toFixed(2),\n      unit: config.units[unit].unit\n    };\n  }\n\n  function injectStyles() {\n    const styles = `\n            .card-countdown .item-content {\n                display: flex;\n            }\n            .cd-count-left {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                margin-right: 0.8rem;\n                line-height: 1.5;\n                align-items: center;\n                justify-content: center;\n            }\n            .cd-count-left .cd-text {\n                font-size: 14px;\n            }\n            .cd-count-left .cd-name {\n                font-weight: bold;\n                font-size: 18px;\n            }\n            .cd-count-left .cd-time {\n                font-size: 30px;\n                font-weight: bold;\n                color: var(--anzhiyu-main);\n            }\n            .cd-count-left .cd-date {\n                font-size: 12px;\n                opacity: 0.6;\n            }\n            .cd-count-left::after {\n                content: \"\";\n                position: absolute;\n                right: -0.8rem;\n                width: 2px;\n                height: 80%;\n                background-color: var(--anzhiyu-main);\n                opacity: 0.5;\n            }\n            .cd-count-right {\n                flex: 1;\n                margin-left: .8rem;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n            }\n            .cd-count-item {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                height: 24px;\n            }\n            .cd-item-name {\n                font-size: 14px;\n                margin-right: 0.8rem;\n                white-space: nowrap;\n            }\n            .cd-item-progress {\n                position: relative;\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: space-between;\n                height: 100%;\n                width: 100%;\n                border-radius: 8px;\n                background-color: var(--anzhiyu-background);\n                overflow: hidden;\n            }\n            .cd-progress-bar {\n                height: 100%;\n                border-radius: 8px;\n                background-color: var(--anzhiyu-main);\n            }\n            .cd-percentage,\n            .cd-remaining {\n                position: absolute;\n                font-size: 12px;\n                margin: 0 6px;\n                transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n            }\n            .cd-many {\n                color: #fff;\n            }\n            .cd-remaining {\n                opacity: 0;\n                transform: translateX(10px);\n            }\n            .card-countdown .item-content:hover .cd-remaining {\n                transform: translateX(0);\n                opacity: 1;\n            }\n            .card-countdown .item-content:hover .cd-percentage {\n                transform: translateX(-10px);\n                opacity: 0;\n            }\n        `;\n\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.textContent = styles;\n    document.head.appendChild(styleSheet);\n  }\n\n  function updateCountdown() {\n    const elements = ['eventName', 'eventDate', 'daysUntil', 'countRight', 'countdownText']\n        .map(id => document.getElementById(id));\n\n    if (elements.some(el => !el)) return;\n\n    const [eventName, eventDate, daysUntil, countRight, countdownText] = elements;\n    const nextFestival = getNextFestival();\n    const timeData = Object.keys(config.units).reduce((acc, unit) => ({\n      ...acc,\n      [unit]: getTimeUnit(unit)\n    }), {});\n\n    if (nextFestival) {\n      const days = Math.ceil((nextFestival.timestamp - Date.now()) / (24 * 60 * 60 * 1000));\n      const isToday = days === 0;\n\n      countdownText.textContent = isToday ? config.countdownText.today : config.countdownText.future;\n      eventName.textContent = nextFestival.name;\n      eventDate.textContent = nextFestival.date;\n      daysUntil.textContent = isToday ? \"今天\" : days;\n    }\n\n    countRight.innerHTML = Object.entries(timeData)\n        .map(([_, item]) => `\n        <div class=\"cd-count-item\">\n          <div class=\"cd-item-name\">${item.name}</div>\n          <div class=\"cd-item-progress\">\n            <div class=\"cd-progress-bar\" style=\"width: ${item.percentage}%; opacity: ${item.percentage / 100}\"></div>\n            <span class=\"cd-percentage ${item.percentage >= 46 ? 'cd-many' : ''}\">${item.percentage}%</span>\n            <span class=\"cd-remaining ${item.percentage >= 60 ? 'cd-many' : ''}\">\n              <span class=\"cd-tip\">还剩</span>${item.remaining}<span class=\"cd-tip\">${item.unit}</span>\n            </span>\n          </div>\n        </div>\n      `).join('');\n  }\n\n  let timer;\n  const start = () => {\n    injectStyles();\n    updateCountdown();\n    timer = setInterval(updateCountdown, 600000);\n  };\n\n  ['pjax:complete', 'DOMContentLoaded'].forEach(event =>\n      document.addEventListener(event, start)\n  );\n  document.addEventListener('pjax:send', () => timer && clearInterval(timer));\n\n  return {\n    start,\n    stop: () => timer && clearInterval(timer),\n    getNextFestival\n  };\n})();"]}