{"version":3,"file":"../../js/countdown.js","names":["CountdownTimer","DateFormatter","date","getFullYear","getMonth","toString","padStart","getDate","getNextFestival","today","Date","getNextTypeFestivals","type","checkDate","i","setDate","festivals","Solar","fromDate","getFestivals","length","validFestivals","filter","name","slice","map","timestamp","getTime","Lunar","currentSolar","currentLunar","solarFestivals","lunarFestivals","nextSolar","nextJieQi","getNextJieQi","jieQiFestival","getName","getSolar","toYmd","getYear","getDay","allFestivals","f","undefined","todayStart","todayEnd","todayFestival","find","sort","a","b","config","units","day","text","divider","unit","week","month","year","countdownText","future","getTimeUnit","now","currentHour","getHours","remaining","percentage","toFixed","start","end","currentDay","remainingDays","totalDays","passedDays","setHours","Math","floor","updateCountdown","elements","id","document","getElementById","some","el","eventName","eventDate","daysUntil","countRight","nextFestival","timeData","Object","keys","reduce","acc","days","ceil","isToday","textContent","innerHTML","entries","_","item","join","timer","styleSheet","createElement","head","appendChild","injectStyles","setInterval","forEach","event","addEventListener","clearInterval","stop"],"sources":["js/countdown.js"],"mappings":"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","ignoreList":[],"sourcesContent":["const CountdownTimer = (() => {\n  function DateFormatter(date) {\n    let year = date.getFullYear();\n    let month = (date.getMonth() + 1).toString().padStart(2, '0');\n    let day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`\n  }\n\n  function getNextFestival() {\n    const today = new Date();\n\n    function getNextTypeFestivals(type) {\n      let checkDate = new Date(today);\n      for (let i = 0; i < 60; i++) {\n        checkDate.setDate(checkDate.getDate() + 1);\n        if (type === 'solar') {\n          const currentSolar = Solar.fromDate(checkDate);\n          const festivals = currentSolar.getFestivals();\n          if (festivals.length > 0) {\n            // 筛选出长度不超过三个字的节日\n            const validFestivals = festivals.filter(name => name.length <= 3);\n            if (validFestivals.length > 0) {\n              return validFestivals.slice(0, 1).map(name => ({\n                name,\n                type,\n                date: DateFormatter(checkDate),\n                timestamp: checkDate.getTime()\n              }))[0];\n            }\n          }\n        } else if (type === 'lunar') {\n          const currentLunar = Lunar.fromDate(checkDate);\n          const festivals = currentLunar.getFestivals();\n          if (festivals.length > 0) {\n            // 筛选出长度不超过三个字的节日\n            const validFestivals = festivals.filter(name => name.length <= 3);\n            if (validFestivals.length > 0) {\n              return validFestivals.slice(0, 1).map(name => ({\n                name,\n                type,\n                date: DateFormatter(checkDate),\n                timestamp: checkDate.getTime()\n              }))[0];\n            }\n          }\n        }\n      }\n      return undefined;\n    }\n\n    const currentSolar = Solar.fromDate(today);\n    const currentLunar = Lunar.fromDate(today);\n\n    let solarFestivals = currentSolar.getFestivals()\n        .slice(0, 1)\n        .map(name => ({\n          name,\n          type: 'solar',\n          date: DateFormatter(today),\n          timestamp: today.getTime()\n        }));\n\n    let lunarFestivals = currentLunar.getFestivals()\n        .slice(0, 1)\n        .map(name => ({\n          name,\n          type: 'lunar',\n          date: DateFormatter(today),\n          timestamp: today.getTime()\n        }));\n\n    // 如果当天没有阳历或农历节日，寻找下一个\n    if (solarFestivals.length === 0) {\n      const nextSolar = getNextTypeFestivals('solar')\n      solarFestivals = nextSolar ? [nextSolar] : [];\n    }\n    if (lunarFestivals.length === 0) {\n      const nextLunar = getNextTypeFestivals('lunar');\n      lunarFestivals = nextLunar ? [lunarFestivals] : [];\n    }\n\n    const nextJieQi = currentLunar.getNextJieQi();\n    const jieQiFestival = {\n      name: nextJieQi.getName(),\n      type: 'jieqi',\n      date: nextJieQi.getSolar().toYmd(),\n      timestamp: new Date(nextJieQi.getSolar().getYear(), nextJieQi.getSolar().getMonth() - 1, nextJieQi.getSolar().getDay()).getTime()\n    };\n\n    const allFestivals = [...solarFestivals, ...lunarFestivals, jieQiFestival].filter(f => f !== undefined || null);\n    const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime();\n    const todayEnd = todayStart + 24 * 60 * 60 * 1000 - 1;\n\n    const todayFestival = allFestivals.find(f =>\n        f.timestamp >= todayStart && f.timestamp <= todayEnd\n    );\n\n    if (todayFestival) {\n      return todayFestival;\n    }\n\n    return allFestivals\n        .filter(f => f.timestamp > today.getTime())\n        .sort((a, b) => a.timestamp - b.timestamp)[0];\n  }\n\n  const config = {\n    units: {\n      day: {text: \"今日\", divider: 1, unit: \"小时\"},\n      week: {text: \"本周\", divider: 24, unit: \"天\"},\n      month: {text: \"本月\", divider: 24, unit: \"天\"},\n      year: {text: \"本年\", divider: 24, unit: \"天\"}\n    },\n    countdownText: {\n      future: \"距离\",\n      today: \"\"\n    }\n  };\n\n  function getTimeUnit(unit) {\n    const now = new Date();\n\n    if (unit === 'day') {\n      const currentHour = now.getHours();\n      return {\n        name: config.units[unit].text,\n        remaining: 24 - currentHour,\n        percentage: ((currentHour / 24) * 100).toFixed(2),\n        unit: config.units[unit].unit\n      };\n    }\n\n    // 计算周、月、年的开始和结束时间\n    let start = new Date(now);\n    let end = new Date(now);\n\n    // 获取当前日期的开始时间（0点）\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const currentDay = now.getDay() || 7; // 将周日的0转换为7\n\n    switch(unit) {\n      case 'week':\n        // 获取本周一和周日\n        start = new Date(today.setDate(today.getDate() - (currentDay - 1)));\n        end = new Date(start);\n        end.setDate(start.getDate() + 6);\n        break;\n\n      case 'month':\n        // 获取本月剩余天数（从明天开始算）\n        start = today;\n        start.setDate(start.getDate() + 1); // 从明天开始\n        end = new Date(start.getFullYear(), start.getMonth() + 1, 0);\n        break;\n\n      case 'year':\n        // 获取本年剩余天数（从明天开始算）\n        start = today;\n        start.setDate(start.getDate() + 1); // 从明天开始\n        end = new Date(start.getFullYear(), 11, 31);\n        break;\n    }\n\n    // 重置时间为当天的开始和结束\n    start.setHours(0, 0, 0, 0);\n    end.setHours(23, 59, 59, 999);\n\n    let remainingDays;\n    let totalDays;\n    let passedDays;\n\n    if (unit === 'week') {\n      totalDays = 7;\n      passedDays = currentDay;\n      remainingDays = 7 - currentDay;\n    } else if (unit === 'month') {\n      totalDays = new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();\n      passedDays = now.getDate();\n      remainingDays = Math.floor((end - start) / (24 * 60 * 60 * 1000)) + 1;\n    } else if (unit === 'year') {\n      totalDays = (new Date(now.getFullYear(), 11, 31) - new Date(now.getFullYear(), 0, 1)) / (24 * 60 * 60 * 1000) + 1;\n      passedDays = (today - new Date(now.getFullYear(), 0, 1)) / (24 * 60 * 60 * 1000) + 1;\n      remainingDays = Math.floor((end - start) / (24 * 60 * 60 * 1000)) + 1;\n    }\n\n    // 计算百分比\n    const percentage = (passedDays / totalDays) * 100;\n\n    return {\n      name: config.units[unit].text,\n      remaining: remainingDays,\n      percentage: percentage.toFixed(2),\n      unit: config.units[unit].unit\n    };\n  }\n\n  function injectStyles() {\n    const styles = `\n            .card-countdown .item-content {\n                display: flex;\n            }\n            .cd-count-left {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                margin-right: 0.8rem;\n                line-height: 1.5;\n                align-items: center;\n                justify-content: center;\n                min-height: 120px;\n            }\n            .cd-count-left .cd-text {\n                font-size: 14px;\n                display: block;\n            }\n            .cd-count-left .cd-name {\n                font-weight: bold;\n                font-size: 18px;\n            }\n            .cd-count-left .cd-time {\n                font-size: 30px;\n                font-weight: bold;\n                color: var(--anzhiyu-main);\n            }\n            .cd-count-left .cd-date {\n                font-size: 12px;\n                opacity: 0.6;\n            }\n            .cd-count-left::after {\n                content: \"\";\n                position: absolute;\n                right: -0.8rem;\n                width: 2px;\n                height: 80%;\n                background-color: var(--anzhiyu-main);\n                opacity: 0.5;\n            }\n            .cd-count-right {\n                flex: 1;\n                margin-left: .8rem;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n            }\n            .cd-count-item {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                height: 24px;\n            }\n            .cd-item-name {\n                font-size: 14px;\n                margin-right: 0.8rem;\n                white-space: nowrap;\n            }\n            .cd-item-progress {\n                position: relative;\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: space-between;\n                height: 100%;\n                width: 100%;\n                border-radius: 8px;\n                background-color: var(--anzhiyu-background);\n                overflow: hidden;\n            }\n            .cd-progress-bar {\n                height: 100%;\n                border-radius: 8px;\n                background-color: var(--anzhiyu-main);\n            }\n            .cd-percentage,\n            .cd-remaining {\n                position: absolute;\n                font-size: 12px;\n                margin: 0 6px;\n                transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n            }\n            .cd-many {\n                color: #fff;\n            }\n            .cd-remaining {\n                opacity: 0;\n                transform: translateX(10px);\n            }\n            .card-countdown .item-content:hover .cd-remaining {\n                transform: translateX(0);\n                opacity: 1;\n            }\n            .card-countdown .item-content:hover .cd-percentage {\n                transform: translateX(-10px);\n                opacity: 0;\n            }\n        `;\n\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.textContent = styles;\n    document.head.appendChild(styleSheet);\n  }\n\n  function updateCountdown() {\n    const elements = ['eventName', 'eventDate', 'daysUntil', 'countRight', 'countdownText']\n        .map(id => document.getElementById(id));\n\n    if (elements.some(el => !el)) return;\n\n    const [eventName, eventDate, daysUntil, countRight, countdownText] = elements;\n    const nextFestival = getNextFestival();\n    const timeData = Object.keys(config.units).reduce((acc, unit) => ({\n      ...acc,\n      [unit]: getTimeUnit(unit)\n    }), {});\n\n    if (nextFestival) {\n      const days = Math.ceil((nextFestival.timestamp - Date.now()) / (24 * 60 * 60 * 1000));\n      const isToday = days === 0;\n\n      countdownText.textContent = isToday ? config.countdownText.today : config.countdownText.future;\n      eventName.textContent = nextFestival.name;\n      eventDate.textContent = nextFestival.date;\n      daysUntil.textContent = isToday ? \"今天\" : days;\n    }\n\n    countRight.innerHTML = Object.entries(timeData)\n        .map(([_, item]) => `\n        <div class=\"cd-count-item\">\n          <div class=\"cd-item-name\">${item.name}</div>\n          <div class=\"cd-item-progress\">\n            <div class=\"cd-progress-bar\" style=\"width: ${item.percentage}%; opacity: ${item.percentage / 100}\"></div>\n            <span class=\"cd-percentage ${item.percentage >= 46 ? 'cd-many' : ''}\">${item.percentage}%</span>\n            <span class=\"cd-remaining ${item.percentage >= 60 ? 'cd-many' : ''}\">\n              <span class=\"cd-tip\">还剩</span>${item.remaining}<span class=\"cd-tip\">${item.unit}</span>\n            </span>\n          </div>\n        </div>\n      `).join('');\n  }\n\n  let timer;\n  const start = () => {\n    injectStyles();\n    updateCountdown();\n    timer = setInterval(updateCountdown, 600000);\n  };\n\n  ['pjax:complete', 'DOMContentLoaded'].forEach(event =>\n      document.addEventListener(event, start)\n  );\n  document.addEventListener('pjax:send', () => timer && clearInterval(timer));\n\n  return {\n    start,\n    stop: () => timer && clearInterval(timer),\n    getNextFestival\n  };\n})();"]}