{"version":3,"file":"../../js/imgloaded.js","names":["ProgressiveLoad","constructor","smallSrc","largeSrc","this","initTpl","container","document","createElement","smallStage","largeStage","smallImg","Image","largeImg","className","appendChild","onload","_onSmallLoaded","bind","_onLargeLoaded","progressiveLoad","src","classList","add","style","backgroundImage","executeLoad","config","target","isMobile","window","matchMedia","matches","loader","mobileSmallSrc","mobileLargeSrc","children","insertBefore","enableRoutes","initProgressiveLoad","getElementById","contains","onPJAXComplete","addEventListener"],"sources":["js/imgloaded.js"],"mappings":"AAqIA,MAAMA,gBACJ,WAAAC,CAAYC,EAAUC,GACpBC,KAAKF,SAAWA,EAChBE,KAAKD,SAAWA,EAChBC,KAAKC,SACP,CAKA,OAAAA,GACED,KAAKE,UAAYC,SAASC,cAAc,OACxCJ,KAAKK,WAAaF,SAASC,cAAc,OACzCJ,KAAKM,WAAaH,SAASC,cAAc,OACzCJ,KAAKO,SAAW,IAAIC,MACpBR,KAAKS,SAAW,IAAID,MACpBR,KAAKE,UAAUQ,UAAY,eAC3BV,KAAKK,WAAWK,UAAY,iBAC5BV,KAAKM,WAAWI,UAAY,SAC5BV,KAAKE,UAAUS,YAAYX,KAAKK,YAChCL,KAAKE,UAAUS,YAAYX,KAAKM,YAChCN,KAAKO,SAASK,OAASZ,KAAKa,eAAeC,KAAKd,MAChDA,KAAKS,SAASG,OAASZ,KAAKe,eAAeD,KAAKd,KAClD,CAKA,eAAAgB,GACEhB,KAAKO,SAASU,IAAMjB,KAAKF,SACzBE,KAAKS,SAASQ,IAAMjB,KAAKD,QAC3B,CAKA,cAAAgB,GACEf,KAAKM,WAAWY,UAAUC,IAAI,cAC9BnB,KAAKM,WAAWc,MAAMC,gBAAkB,QAAQrB,KAAKD,YACvD,CAKA,cAAAc,GACEb,KAAKK,WAAWa,UAAUC,IAAI,cAC9BnB,KAAKK,WAAWe,MAAMC,gBAAkB,QAAQrB,KAAKF,YACvD,EAGF,MAAMwB,YAAc,CAACC,EAAQC,KAE3B,MAAMC,EAAWC,OAAOC,WAAW,sBAAsBC,QACnDC,EAAS,IAAIjC,gBACf6B,EAAWF,EAAOO,eAAiBP,EAAOzB,SAC1C2B,EAAWF,EAAOQ,eAAiBR,EAAOxB,UAG1CyB,EAAOQ,SAAS,IAClBR,EAAOS,aAAaJ,EAAO3B,UAAWsB,EAAOQ,SAAS,IAExDH,EAAOb,iBAAiB,EAGpBO,OAAS,CACbzB,SAAU,gBACVC,SAAU,gBACV+B,eAAgB,gBAChBC,eAAgB,gBAChBG,aAAc,CAAC,MAGjB,SAASC,oBAAoBZ,GAC3B,MAAMC,EAASrB,SAASiC,eAAe,eACnCZ,GAAUA,EAAON,UAAUmB,SAAS,cACtCf,YAAYC,EAAQC,EAExB,CAEA,SAASc,eAAef,GACtB,MAAMC,EAASrB,SAASiC,eAAe,eACnCZ,GAAUA,EAAON,UAAUmB,SAAS,cACtCF,oBAAoBZ,EAExB,CAEApB,SAASoC,iBAAiB,oBAAoB,WAC5CJ,oBAAoBZ,OACtB,IAEApB,SAASoC,iBAAiB,iBAAiB,WACzCD,eAAef,OACjB","ignoreList":[],"sourcesContent":["// // 首页一图流加载优化\n// /**\n//  * @description 实现medium的渐进加载背景的效果\n//  */\n// (function() {\n//     class ProgressiveLoad {\n//         constructor(smallSrc, largeSrc) {\n//             this.smallSrc = smallSrc;\n//             this.largeSrc = largeSrc;\n//             this.initTpl();\n//             this.container.addEventListener('animationend', () => {\n//                 this.smallStage.style.display = 'none';\n//             }, {once: true});\n//         }\n//\n//         initTpl() {\n//             this.container = document.createElement('div');\n//             this.smallStage = document.createElement('div');\n//             this.largeStage = document.createElement('div');\n//             this.smallImg = new Image();\n//             this.largeImg = new Image();\n//             this.container.className = 'pl-container';\n//             this.smallStage.className = 'pl-img pl-blur';\n//             this.largeStage.className = 'pl-img';\n//             this.container.appendChild(this.smallStage);\n//             this.container.appendChild(this.largeStage);\n//             this.smallImg.onload = this._onSmallLoaded.bind(this);\n//             this.largeImg.onload = this._onLargeLoaded.bind(this);\n//         }\n//\n//         progressiveLoad() {\n//             this.smallImg.src = this.smallSrc;\n//             this.largeImg.src = this.largeSrc;\n//         }\n//\n//         _onLargeLoaded() {\n//             this.largeStage.classList.add('pl-visible');\n//             this.largeStage.style.backgroundImage = `url('${this.largeSrc}')`;\n//         }\n//\n//         _onSmallLoaded() {\n//             this.smallStage.classList.add('pl-visible');\n//             this.smallStage.style.backgroundImage = `url('${this.smallSrc}')`;\n//         }\n//     }\n//\n//     const executeLoad = (config, target) => {\n//         // console.log('执行渐进背景替换');\n//         const isMobile = window.matchMedia('(max-width: 767px)').matches;\n//         const loader = new ProgressiveLoad(\n//             isMobile ? config.mobileSmallSrc : config.smallSrc,\n//             isMobile ? config.mobileLargeSrc : config.largeSrc\n//         );\n//         if (target.children[0]) {\n//             target.insertBefore(loader.container, target.children[0]);\n//         }\n//         loader.progressiveLoad();\n//     };\n//\n//     const ldconfig = {\n//         light: {\n//             smallSrc: '/img/bg0.webp', //浅色模式 小图链接 尽可能配置小于100k的图片\n//             largeSrc: '/img/bg1.webp', //浅色模式 大图链接 最终显示的图片\n//             mobileSmallSrc: '/img/bg0.webp', //手机端浅色小图链接 尽可能配置小于100k的图片\n//             mobileLargeSrc: '/img/bg1.webp', //手机端浅色大图链接 最终显示的图片\n//             enableRoutes: ['/'],\n//         },\n//         dark: {\n//             smallSrc: '/img/bg0.webp', //深色模式 小图链接 尽可能配置小于100k的图片\n//             largeSrc: '/img/bg1.webp', //深色模式 大图链接 最终显示的图片\n//             mobileSmallSrc: '/img/bg0.webp', //手机端深色模式小图链接 尽可能配置小于100k的图片\n//             mobileLargeSrc: '/img/bg1.webp', //手机端深色大图链接 最终显示的图片\n//             enableRoutes: ['/'],\n//         },\n//     };\n//\n//     const getCurrentTheme = () => {\n//         return document.documentElement.getAttribute('data-theme');\n//     }\n//\n//     const onThemeChange = () => {\n//         const currentTheme = getCurrentTheme();\n//         const config = ldconfig[currentTheme];\n//         initProgressiveLoad(config);\n//         document.addEventListener(\"DOMContentLoaded\", function() {\n//             initProgressiveLoad(config);\n//         });\n//\n//         document.addEventListener(\"pjax:complete\", function() {\n//             onPJAXComplete(config);\n//         });\n//     }\n//\n//     let initTheme = getCurrentTheme();\n//     let initConfig = ldconfig[initTheme];\n//     initProgressiveLoad(initConfig);\n//\n//     const observer = new MutationObserver(mutations => {\n//         mutations.forEach(mutation => {\n//             if (mutation.attributeName === \"data-theme\" && location.pathname === '/') {\n//                 onThemeChange();\n//             }\n//         });\n//     });\n//\n//     observer.observe(document.documentElement, {\n//         attributes: true,\n//         attributeFilter: [\"data-theme\"]\n//     });\n//\n//     function initProgressiveLoad(config) {\n//         const container = document.querySelector('.pl-container');\n//         if (container) {\n//             container.remove();\n//         }\n//         const target = document.getElementById('page-header');\n//         if (target && target.classList.contains('full_page')) {\n//             executeLoad(config, target);\n//         }\n//     }\n//\n//     function onPJAXComplete(config) {\n//         const target = document.getElementById('page-header');\n//         if (target && target.classList.contains('full_page')) {\n//             initProgressiveLoad(config);\n//         }\n//     }\n//\n// })();\n// 首页头图加载优化\n/**\n * @description 实现medium的渐进加载背景的效果\n */\nclass ProgressiveLoad {\n  constructor(smallSrc, largeSrc) {\n    this.smallSrc = smallSrc;\n    this.largeSrc = largeSrc;\n    this.initTpl();\n  }\n\n  /**\n   * @description 生成ui模板\n   */\n  initTpl() {\n    this.container = document.createElement('div');\n    this.smallStage = document.createElement('div');\n    this.largeStage = document.createElement('div');\n    this.smallImg = new Image();\n    this.largeImg = new Image();\n    this.container.className = 'pl-container';\n    this.smallStage.className = 'pl-img pl-blur';\n    this.largeStage.className = 'pl-img';\n    this.container.appendChild(this.smallStage);\n    this.container.appendChild(this.largeStage);\n    this.smallImg.onload = this._onSmallLoaded.bind(this);\n    this.largeImg.onload = this._onLargeLoaded.bind(this);\n  }\n\n  /**\n   * @description 加载背景\n   */\n  progressiveLoad() {\n    this.smallImg.src = this.smallSrc;\n    this.largeImg.src = this.largeSrc;\n  }\n\n  /**\n   * @description 大图加载完成\n   */\n  _onLargeLoaded() {\n    this.largeStage.classList.add('pl-visible');\n    this.largeStage.style.backgroundImage = `url('${this.largeSrc}')`;\n  }\n\n  /**\n   * @description 小图加载完成\n   */\n  _onSmallLoaded() {\n    this.smallStage.classList.add('pl-visible');\n    this.smallStage.style.backgroundImage = `url('${this.smallSrc}')`;\n  }\n}\n\nconst executeLoad = (config, target) => {\n  // console.log('执行渐进背景替换');\n  const isMobile = window.matchMedia('(max-width: 767px)').matches;\n  const loader = new ProgressiveLoad(\n      isMobile ? config.mobileSmallSrc : config.smallSrc,\n      isMobile ? config.mobileLargeSrc : config.largeSrc\n  );\n  // 和背景图颜色保持一致，防止高斯模糊后差异较大\n  if (target.children[0]) {\n    target.insertBefore(loader.container, target.children[0]);\n  }\n  loader.progressiveLoad();\n};\n\nconst config = {\n  smallSrc: '/img/bg0.webp', // 小图链接 尽可能配置小于100k的图片\n  largeSrc: '/img/bg1.webp', // 大图链接 最终显示的图片\n  mobileSmallSrc: '/img/bg0.webp', // 手机端小图链接 尽可能配置小于100k的图片\n  mobileLargeSrc: '/img/bg1.webp', // 手机端大图链接 最终显示的图片\n  enableRoutes: ['/'],\n};\n\nfunction initProgressiveLoad(config) {\n  const target = document.getElementById('page-header');\n  if (target && target.classList.contains('full_page')) {\n    executeLoad(config, target);\n  }\n}\n\nfunction onPJAXComplete(config) {\n  const target = document.getElementById('page-header');\n  if (target && target.classList.contains('full_page')) {\n    initProgressiveLoad(config);\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  initProgressiveLoad(config);\n});\n\ndocument.addEventListener(\"pjax:complete\", function() {\n  onPJAXComplete(config);\n});\n"]}