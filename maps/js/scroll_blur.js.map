{"version":3,"file":"../../js/scroll_blur.js","names":["HeaderTransition","constructor","options","this","headerId","bgId","maxBlur","minOpacity","transitionDuration","header","webBg","initialized","init","document","getElementById","addTransitionStyles","handleScroll","bind","window","addEventListener","passive","console","warn","style","createElement","textContent","head","appendChild","headerHeight","offsetHeight","scrollTop","pageYOffset","documentElement","scrollProgress","Math","min","blurAmount","opacity","container","querySelector","filter","bg_opacity","destroy","removeEventListener","refresh","defaultConfig","headerTransition","initHeaderTransition","config"],"sources":["js/scroll_blur.js"],"mappings":"AACA,MAAMA,iBACJ,WAAAC,CAAYC,EAAU,CAAC,GACrBC,KAAKD,QAAU,CACbE,SAAU,cACVC,KAAM,SACNC,QAAS,GACTC,WAAY,GACZC,mBAAoB,OACjBN,GAGLC,KAAKM,OAAS,KACdN,KAAKO,MAAQ,KACbP,KAAKQ,aAAc,EAEnBR,KAAKS,MACP,CAEA,IAAAA,GACMT,KAAKQ,cAETR,KAAKM,OAASI,SAASC,eAAeX,KAAKD,QAAQE,UACnDD,KAAKO,MAAQG,SAASC,eAAeX,KAAKD,QAAQG,MAE7CF,KAAKM,QAKVN,KAAKY,sBAELZ,KAAKa,aAAeb,KAAKa,aAAaC,KAAKd,MAC3Ce,OAAOC,iBAAiB,SAAUhB,KAAKa,aAAc,CAAEI,SAAS,IAEhEjB,KAAKQ,aAAc,EAEnBR,KAAKa,gBAXHK,QAAQC,KAAK,2BAA2BnB,KAAKD,QAAQE,uBAYzD,CAEA,mBAAAW,GACE,MAAMQ,EAAQV,SAASW,cAAc,SACrCD,EAAME,YAAc,YACftB,KAAKD,QAAQE,0GAEOD,KAAKD,QAAQM,8DACbL,KAAKD,QAAQM,2DAGjCL,KAAKD,QAAQG,sCACOF,KAAKD,QAAQM,8DACbL,KAAKD,QAAQM,gDAGtCK,SAASa,KAAKC,YAAYJ,EAC5B,CAEA,YAAAP,GACE,IAAKb,KAAKM,OAAQ,OAElB,MAAMmB,EAAezB,KAAKM,OAAOoB,aAC3BC,EAAYZ,OAAOa,aAAelB,SAASmB,gBAAgBF,UAC3DG,EAAiBC,KAAKC,IAAIL,EAAYF,EAAc,GAEpDQ,EAAaF,KAAKC,IAAIF,EAAiB9B,KAAKD,QAAQI,QAASH,KAAKD,QAAQI,SAC1E+B,EAAU,EAAIJ,EAEdK,EAAYnC,KAAKM,OAAO8B,cAAc,iBAM5C,GALID,IACFA,EAAUf,MAAMiB,OAAS,QAAQJ,OACjCE,EAAUf,MAAMc,QAAUA,GAGxBlC,KAAKO,MAAO,CACdP,KAAKO,MAAMa,MAAMiB,OAAS,QAAQJ,OAClC,IAAIK,EAAaJ,EACbI,EAAatC,KAAKD,QAAQK,aAC5BkC,EAAatC,KAAKD,QAAQK,YAE5BJ,KAAKO,MAAMa,MAAMc,QAAUI,CAC7B,CACF,CAEA,OAAAC,GACOvC,KAAKQ,cAEVO,OAAOyB,oBAAoB,SAAUxC,KAAKa,cAC1Cb,KAAKQ,aAAc,EACnBR,KAAKM,OAAS,KACdN,KAAKO,MAAQ,KACf,CAEA,OAAAkC,GACEzC,KAAKuC,UACLvC,KAAKS,MACP,EAGF,MAAMiC,cAAgB,CACpBzC,SAAU,cACVC,KAAM,SACNC,QAAS,GACTC,WAAY,GACZC,mBAAoB,KAGtB,IAAIsC,iBAAmB,KAEvB,SAASC,qBAAqBC,EAAS,CAAC,GAClCF,kBACFA,iBAAiBJ,UAEnBI,iBAAmB,IAAI9C,iBAAiB,IACnC6C,iBACAG,GAEP,CAEAnC,SAASM,iBAAiB,oBAAoB,KAC5C4B,sBAAsB,IAGxBlC,SAASM,iBAAiB,iBAAiB,KACrC2B,iBACFA,iBAAiBF,UAEjBG,sBACF,IAGF7B,OAAOlB,iBAAmBA,iBAC1BkB,OAAO6B,qBAAuBA","ignoreList":[],"sourcesContent":["\nclass HeaderTransition {\n  constructor(options = {}) {\n    this.options = {\n      headerId: 'page-header',\n      bgId: 'web_bg',\n      maxBlur: 50,\n      minOpacity: 0.8,\n      transitionDuration: 300,\n      ...options\n    };\n\n    this.header = null;\n    this.webBg = null;\n    this.initialized = false;\n\n    this.init();\n  }\n\n  init() {\n    if (this.initialized) return;\n\n    this.header = document.getElementById(this.options.headerId);\n    this.webBg = document.getElementById(this.options.bgId);\n\n    if (!this.header) {\n      console.warn(`Header element with id \"${this.options.headerId}\" not found`);\n      return;\n    }\n\n    this.addTransitionStyles();\n\n    this.handleScroll = this.handleScroll.bind(this);\n    window.addEventListener('scroll', this.handleScroll, { passive: true });\n\n    this.initialized = true;\n\n    this.handleScroll();\n  }\n\n  addTransitionStyles() {\n    const style = document.createElement('style');\n    style.textContent = `\n      #${this.options.headerId} .pl-container {\n        will-change: transform, filter, opacity;\n        transition: filter ${this.options.transitionDuration}ms ease-out,\n                   opacity ${this.options.transitionDuration}ms ease-out;\n      }\n      \n      #${this.options.bgId} {\n        transition: filter ${this.options.transitionDuration}ms ease-out,\n                   opacity ${this.options.transitionDuration}ms ease-out;\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  handleScroll() {\n    if (!this.header) return;\n\n    const headerHeight = this.header.offsetHeight;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollProgress = Math.min(scrollTop / headerHeight, 1);\n\n    const blurAmount = Math.min(scrollProgress * this.options.maxBlur, this.options.maxBlur);\n    const opacity = 1 - scrollProgress;\n\n    const container = this.header.querySelector('.pl-container');\n    if (container) {\n      container.style.filter = `blur(${blurAmount}px)`;\n      container.style.opacity = opacity;\n    }\n\n    if (this.webBg) {\n      this.webBg.style.filter = `blur(${blurAmount}px)`;\n      let bg_opacity = opacity;\n      if (bg_opacity < this.options.minOpacity) {\n        bg_opacity = this.options.minOpacity;\n      }\n      this.webBg.style.opacity = bg_opacity;\n    }\n  }\n\n  destroy() {\n    if (!this.initialized) return;\n\n    window.removeEventListener('scroll', this.handleScroll);\n    this.initialized = false;\n    this.header = null;\n    this.webBg = null;\n  }\n\n  refresh() {\n    this.destroy();\n    this.init();\n  }\n}\n\nconst defaultConfig = {\n  headerId: 'page-header',\n  bgId: 'web_bg',\n  maxBlur: 50,\n  minOpacity: 0.8,\n  transitionDuration: 400\n};\n\nlet headerTransition = null;\n\nfunction initHeaderTransition(config = {}) {\n  if (headerTransition) {\n    headerTransition.destroy();\n  }\n  headerTransition = new HeaderTransition({\n    ...defaultConfig,\n    ...config\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initHeaderTransition();\n});\n\ndocument.addEventListener('pjax:complete', () => {\n  if (headerTransition) {\n    headerTransition.refresh();\n  } else {\n    initHeaderTransition();\n  }\n});\n\nwindow.HeaderTransition = HeaderTransition;\nwindow.initHeaderTransition = initHeaderTransition;"]}